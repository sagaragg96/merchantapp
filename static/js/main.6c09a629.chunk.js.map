{"version":3,"sources":["HomePage.js","EditMerchant.js","MerchantHistory.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["HomePage","state","id","name","description","status","history","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","obj","timestamp","Date","old","new","console","log","props","merchants","length","setTimeout","dispatch","type","payload","viewCellRendererFunc","rdata","espan","document","createElement","classList","add","innerHTML","setAttribute","addEventListener","push","pathname","data","espan1","handleDelete","espan2","handleStatus","span","appendChild","tempStatus","concat","toConsumableArray","handleRowClick","columnDefs","headerName","field","filter","autoHeight","cellRenderer","this","width","react_default","a","className","onSubmit","htmlFor","onChange","style","margin","height","main","rowData","rowHeight","rowSelection","onRowClicked","pagination","paginationPageSize","Component","connect","EditMerchant","merchant","location","getName","getDesc","_this2","merchantData","defaultValue","ref","input","MerchantHistory","_ref","map","hist","marginLeft","key","App","react_router_dom","react_router","exact","path","component","Boolean","window","hostname","match","rootReducer","arguments","undefined","action","objectSpread","store","createStore","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6c09a629.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\n\r\nclass HomePage extends Component {\r\n    state = {\r\n        id: '',\r\n        name: '',\r\n        description: '',\r\n        status:'',\r\n        history: []\r\n    }\r\n\r\n    handleChange = (e) => {\r\n            this.setState({\r\n                [e.target.id]: e.target.value\r\n            })\r\n    \r\n        }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let obj = {};\r\n        obj.timestamp = new Date() + '';\r\n        obj.old = 'New Merchant Created';\r\n        obj.new = 'Merchant Name: ' + this.state.name + ', Description: ' + this.state.description + ', Status: ' + this.state.status;\r\n        console.log(\"History Object : \", obj);\r\n        let id = this.props.merchants.length + 1;\r\n        this.setState({\r\n            id,\r\n            history: [obj]\r\n        })\r\n        setTimeout(() => {\r\n            this.props.dispatch({\r\n                type: 'ADD_MERCHANT',\r\n                payload: this.state\r\n            })\r\n            console.log(\"Redux State is : \",this.props.merchants);\r\n        }, 1000);\r\n    }\r\n\r\n    viewCellRendererFunc = (rdata) => {\r\n        var espan = document.createElement('button');\r\n        espan.classList.add(\"butn\");\r\n        espan.classList.add(\"red\");\r\n        espan.classList.add(\"lighten-1\");\r\n        espan.classList.add(\"z-depth-0\");\r\n        espan.innerHTML = \"Edit\";\r\n        espan.setAttribute('href','#modal1');\r\n        espan.addEventListener('click', () => {\r\n            this.props.history.push({\r\n                pathname: '/editMerchant',\r\n                state: {\r\n                    id: rdata.data.id,\r\n                }\r\n            });\r\n        });\r\n\r\n        var espan1 = document.createElement('button');\r\n        espan1.classList.add(\"butn\");\r\n        espan1.classList.add(\"red\");\r\n        espan1.classList.add(\"lighten-1\");\r\n        espan1.classList.add(\"z-depth-0\");\r\n        espan1.innerHTML = \"Delete\";\r\n        espan1.addEventListener('click', () => {\r\n            this.handleDelete(rdata.data.id);\r\n        });\r\n\r\n        var espan2 = document.createElement('button');\r\n        espan2.classList.add(\"butn\");\r\n        espan2.classList.add(\"red\");\r\n        espan2.classList.add(\"lighten-1\");\r\n        espan2.classList.add(\"z-depth-0\");\r\n        espan2.innerHTML = \"Activate/Deactivate\";\r\n        espan2.addEventListener('click', () => {\r\n            this.handleStatus(rdata.data.id);\r\n        });\r\n        var span = document.createElement('div');\r\n        span.appendChild(espan);\r\n        span.appendChild(espan1);\r\n        span.appendChild(espan2);\r\n        return span;\r\n    }\r\n\r\n    handleDelete = (id) => {\r\n        this.props.dispatch({type: 'DELETE_MERCHANT', id});\r\n    }\r\n\r\n    handleStatus = (id) => {\r\n        let obj = {};\r\n        obj.timestamp = new Date() + '';\r\n        obj.old = \"Status: \" + this.props.merchants[id - 1].status;\r\n        var tempStatus = ''\r\n        if(this.props.merchants[id - 1].status == 'Active') {\r\n            tempStatus = \"Inactive\";    \r\n        } else {\r\n            tempStatus = \"Active\";\r\n        }\r\n        obj.new = \"Status: \" + tempStatus;\r\n        this.setState({\r\n            id,\r\n            name: this.props.merchants[id - 1].name,\r\n            status: tempStatus,\r\n            description: this.props.merchants[id - 1].description,\r\n            history: [...this.props.merchants[id - 1].history, obj]\r\n        })\r\n        this.props.dispatch({\r\n            type: 'UPDATE_MERCHANT_STATUS',\r\n            payload: this.state\r\n        })\r\n    }\r\n\r\n    handleRowClick = (e) => {\r\n        this.props.history.push({\r\n            pathname: '/merchantHistory',\r\n            state: {\r\n                history: [...e.data.history],\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const columnDefs = [{\r\n            headerName: 'Merchant Name',\r\n            field: 'name',\r\n            filter: true\r\n          }, {\r\n            headerName: 'Description',\r\n            field: 'description',\r\n            autoHeight: true,\r\n            filter: true\r\n          }, {\r\n            headerName: 'Status',\r\n            field: 'status',\r\n            filter: true\r\n          }, {\r\n            headerName: 'Action',\r\n            field: 'id',\r\n            cellRenderer: this.viewCellRendererFunc,\r\n            width: 300,\r\n            autoHeight: true\r\n        }]\r\n\r\n        let { merchants } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                     <form onSubmit={this.handleSubmit} className=\"white\">\r\n                        <h5 className=\"grey-text text-darken-3\">Add Merchant</h5>\r\n                        <div className=\"input-field\">\r\n                          <label className=\"active\" htmlFor=\"name\">Merchant Name</label>\r\n                            <input type=\"text\" id=\"name\" onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <label className=\"active\" htmlFor=\"description\">Description</label>\r\n                            <textarea id=\"description\" className=\"materialize-textarea\" onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <label className=\"active\" htmlFor=\"status\">Status</label>\r\n                            <textarea id=\"status\" className=\"materialize-textarea\" onChange={this.handleChange} />\r\n                        </div>\r\n                       <div className=\"input-field\">\r\n                            <button className=\"btn pink lighten-1 z-depth-0\">Add</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"ag-theme-balham\" style={{ margin: 'auto', height: '363px', width: '900px' }}>\r\n                    <AgGridReact\r\n                        columnDefs={columnDefs}\r\n                        rowData={merchants}\r\n                        rowHeight='275'\r\n                        rowSelection= {true}\r\n                        onRowClicked= {this.handleRowClick}\r\n                        pagination={true}\r\n                        paginationPageSize='10'>\r\n                    </AgGridReact>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        merchants: state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(HomePage);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass EditMerchant extends Component {\r\n    state = {\r\n        id: this.props.merchant[this.props.location.state.id - 1].id,\r\n        name: this.props.merchant[this.props.location.state.id - 1].name,\r\n        description: this.props.merchant[this.props.location.state.id - 1].description,\r\n        status: this.props.merchant[this.props.location.state.id - 1].status,\r\n        history: this.props.merchant[this.props.location.state.id - 1].history\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let obj = {};\r\n        obj.timestamp = new Date() + '';\r\n        obj.old = 'Name: ' + this.state.name + ', Description: ' + this.state.description;\r\n        obj.new = 'Name: ' + this.getName.value + ', Description: ' + this.getDesc.value;\r\n        this.setState({\r\n            name: this.getName.value,\r\n            description: this.getDesc.value,\r\n            history: [...this.state.history, obj]\r\n        })\r\n        setTimeout(() => {\r\n            this.props.dispatch({\r\n                type: 'UPDATE_MERCHANT_DATA',\r\n                payload: this.state\r\n            })\r\n            this.props.history.push('/');\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        const id = this.props.location.state.id - 1;\r\n        const merchantData = this.props.merchant[id];\r\n        console.log('Data : ', merchantData);\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Edit Merchant</h5>\r\n                    <div className=\"input-field\">\r\n                        <label className=\"active\" htmlFor=\"name\">Merchant Name</label>\r\n                        <input type=\"text\" id=\"name\" defaultValue={merchantData.name} ref={(input) => this.getName = input} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label className=\"active\" htmlFor=\"description\">Description</label>\r\n                        <textarea id=\"description\" className=\"materialize-textarea\"  defaultValue={merchantData.description} ref={(input) => this.getDesc = input} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Update</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        merchant: state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(EditMerchant)","import React from 'react';\r\n\r\nconst MerchantHistory = ({location}) => {\r\n    const history = location.state.history;\r\n    console.log(history);\r\n    return (\r\n        <div className=\"project-list section\">\r\n            <h5 className=\"grey-text text-darken-3\">Merchant History</h5>\r\n            { history && history.map(hist => {\r\n                return (\r\n                    <div className=\"card-content black-text text-darken-3\" style={{ marginLeft: '30px'}} key={hist}>\r\n                        <p key={hist.old}>Old Data : {hist.old}</p>\r\n                        <p key={hist.new}>Modified Data : {hist.new}</p>\r\n                        <p key={hist.timestamp}>{hist.timestamp}</p>\r\n                        <p>--------------------------------------------------------------------</p>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MerchantHistory","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport HomePage from './HomePage';\nimport EditMerchant from './EditMerchant'\nimport MerchantHistory from './MerchantHistory';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route path='/editMerchant' component={EditMerchant} />\n          <Route path='/merchantHistory' component={MerchantHistory} />\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const rootReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'ADD_MERCHANT':\r\n            return state.concat([action.payload]);\r\n        case 'DELETE_MERCHANT':\r\n            return state.filter((merchant) => merchant.id !== action.id);\r\n        case 'UPDATE_MERCHANT_DATA':\r\n            return state.map((merchant) => {\r\n                if (merchant.id === action.payload.id) {\r\n                    return {\r\n                        ...merchant,\r\n                        name: action.payload.name,\r\n                        description: action.payload.description,\r\n                        history: [...action.payload.history]\r\n                    }\r\n                } else return merchant;\r\n            })\r\n        case 'UPDATE_MERCHANT_STATUS':\r\n            return state.map((merchant) => {\r\n                if (merchant.id === action.payload.id) {\r\n                    return {\r\n                        ...merchant,\r\n                        status: action.payload.status,\r\n                        history: [...action.payload.history]\r\n                    }\r\n                } else return merchant;\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers/rootReducer'\nimport { Provider } from 'react-redux'\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(<Provider store={store}>\n    <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}